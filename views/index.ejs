<!-- views/home.ejs -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Movies</title>
    <!-- <link rel="stylesheet" href="/styles/home.css"> -->
    <style>
      body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
      }
  
      #search-container {
        position: absolute;
        top: 20px;
        right: 20px;
      }
  
      #search-input {
        padding: 8px;
        font-size: 16px;
      }
  
      #search-button {
        padding: 8px 16px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        font-size: 16px;
        cursor: pointer;
        margin-left: 8px;
      }
  
      #search-button:hover {
        background-color: #0056b3;
      }
  
      #movies-list {
        padding: 20px;
        margin-top: 80px;
      }
  
      .movie {
        margin-bottom: 20px;
        padding: 15px;
        border: 1px solid #ddd;
        border-radius: 4px;
      }
  
      #pagination-controls {
        position: fixed;
        bottom: 20px;
        left: 50%;
        transform: translateX(-50%);
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 10px;
      }
  
      #pagination-controls button {
        padding: 10px 20px;
        font-size: 16px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
      }
  
      #pagination-controls button:disabled {
        background-color: #cccccc;
      }
  
      #pagination-controls span {
        font-size: 16px;
      }
    </style>
  </head>
  <body>
    <div id="search-container">
      <input type="text" id="search-input" placeholder="Search movies..." />
      <button id="search-button">Search</button>
    </div>
  
    <!-- Movie List -->
    <div id="movies-list"></div>
  
    <!-- Pagination Controls at Bottom Center -->
    <div id="pagination-controls">
      <button id="prev-page">Previous</button>
      <span id="current-page">Page 1</span>
      <button id="next-page">Next</button>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        let currentPage = 1;
        const moviesPerPage = 5;
        let searchQuery = "";

        function fetchMovies(page = 1, search = "") {
          // Construct the API URL with pagination and search keyword
          let apiUrl = `/api/v1/movies?page=${page}&limit=${moviesPerPage}`;
          if (search) {
            apiUrl += `&keyword=${encodeURIComponent(search)}`;
          }

          fetch(apiUrl)
            .then((response) => response.json())
            .then((result) => {
              console.log("Full response:", result);

              const movies = result.data.movies || [];
              const totalMovies = result.totalMovies; // Assuming API returns total number of movies
              const totalPages = Math.ceil(totalMovies / moviesPerPage);

              console.log("Movies data:", movies);
              updateMoviesList(movies);
              updatePaginationControls(totalPages);
            })
            .catch((error) => console.error("Error fetching movies:", error));
        }

        function updateMoviesList(movies) {
          const moviesList = document.getElementById("movies-list");
          if (!moviesList) {
            console.error("movies-list element not found");
            return;
          }

          moviesList.innerHTML = ""; // Clear previous content

          movies.forEach((movie) => {
            const movieDiv = document.createElement("div");
            movieDiv.classList.add("movie");

            movieDiv.innerHTML = `
              <h2>${movie.name}</h2>
              <p>${movie.description}</p>
              <p>Actors: ${movie.actors}</p>
              <p>Directors: ${movie.directors}</p>
              <p>Rating: ${movie.rating}/10(${movie.totalRating})</p>
            `;

            console.log("Appending movie:", movieDiv);
            moviesList.appendChild(movieDiv);
          });
        }

        function updatePaginationControls(totalPages) {
          const prevButton = document.getElementById("prev-page");
          const nextButton = document.getElementById("next-page");
          const currentPageSpan = document.getElementById("current-page");

          currentPageSpan.textContent = `Page ${currentPage}`;

          prevButton.disabled = currentPage === 1;
          nextButton.disabled = currentPage === totalPages;
        }

        // Search function: Trigger fetchMovies with search query
        document
          .getElementById("search-button")
          .addEventListener("click", () => {
            const searchInput = document.getElementById("search-input").value;
            searchQuery = searchInput;
            currentPage = 1; // Reset to the first page when a new search is made
            fetchMovies(currentPage, searchQuery);
          });

        // Pagination event listeners
        document.getElementById("prev-page").addEventListener("click", () => {
          if (currentPage > 1) {
            currentPage--;
            fetchMovies(currentPage, searchQuery);
          }
        });

        document.getElementById("next-page").addEventListener("click", () => {
          currentPage++;
          fetchMovies(currentPage, searchQuery);
        });

        // Initial fetch for the first page
        fetchMovies(currentPage);
      });
    </script>
  </body>
</html>
